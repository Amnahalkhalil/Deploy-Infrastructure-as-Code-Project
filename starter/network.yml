Description: >
    Amnah Alshammari / Udagram Network Stack
Parameters:
    NewEnvironmentName:
        Description: An Environment name that will be prefixed to resources
        Type: String

    NewPrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the Network
        Type: String
        Default: 10.0.2.0/24

    NewPrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the Network
        Type: String
        Default: 10.0.3.0/24

    NewPublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the Network
        Type: String
        Default: 10.0.0.0/24

    NewPublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the Network
        Type: String
        Default: 10.0.1.0/24

    NewVpcCIDR:
        Description: Please enter the IP range (CIDR notation) for this
        Type: String
        Default: 10.0.0.0/16

Resources:
    # VPC and related resources
    MyCustomVPCName:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref NewVpcCIDR
            EnableDnsHostnames: true
            Tags:
                - Key: Name
                  Value: !Ref NewEnvironmentName

    MyCustomInternetGatewayName:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: !Ref NewEnvironmentName

    MyCustomInternetGatewayAttachment:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            InternetGatewayId: !Ref MyCustomInternetGatewayName
            VpcId: !Ref MyCustomVPCName

    # Public Subnets and related resources
    MyCustomPublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyCustomVPCName
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref NewPublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Public Subnet (AZ1)

    MyCustomPublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyCustomVPCName
            AvailabilityZone: !Select [1, !GetAZs '']
            CidrBlock: !Ref NewPublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Public Subnet (AZ2)

    MyCustomPublicRouteTable:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MyCustomVPCName
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Public Routes

    MyCustomDefaultPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: MyCustomInternetGatewayAttachment
        Properties:
            RouteTableId: !Ref MyCustomPublicRouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref MyCustomInternetGatewayName

    PublicSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref MyCustomPublicRouteTable
            SubnetId: !Ref MyCustomPublicSubnet1

    PublicSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref MyCustomPublicRouteTable
            SubnetId: !Ref MyCustomPublicSubnet2

    # NAT Gateways for Private Subnets
    MyCustomNatGateway1EIP:
        Type: AWS::EC2::EIP
        DependsOn: MyCustomInternetGatewayAttachment
        Properties:
            Domain: vpc

    MyCustomNatGateway2EIP:
        Type: AWS::EC2::EIP
        DependsOn: MyCustomInternetGatewayAttachment
        Properties:
            Domain: vpc

    MyCustomNatGateway1:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt MyCustomNatGateway1EIP.AllocationId
            SubnetId: !Ref MyCustomPublicSubnet1

    MyCustomNatGateway2:
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt MyCustomNatGateway2EIP.AllocationId
            SubnetId: !Ref MyCustomPublicSubnet2

    # Private Subnets and related resources
    MyCustomPrivateSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyCustomVPCName
            AvailabilityZone: !Select [0, !GetAZs '']
            CidrBlock: !Ref NewPrivateSubnet1CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Private Subnet (AZ1)

    MyCustomPrivateSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref MyCustomVPCName
            AvailabilityZone: !Select [1, !GetAZs '']
            CidrBlock: !Ref NewPrivateSubnet2CIDR
            MapPublicIpOnLaunch: false
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Private Subnet (AZ2)

    PrivateRouteTable1:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MyCustomVPCName
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Private Routes (AZ1)

    DefaultPrivateRoute1:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref MyCustomNatGateway1

    PrivateSubnet1RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable1
            SubnetId: !Ref MyCustomPrivateSubnet1

    PrivateRouteTable2:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref MyCustomVPCName
            Tags:
                - Key: Name
                  Value: !Sub ${NewEnvironmentName} Private Routes (AZ2)

    DefaultPrivateRoute2:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId: !Ref MyCustomNatGateway2

    PrivateSubnet2RouteTableAssociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref PrivateRouteTable2
            SubnetId: !Ref MyCustomPrivateSubnet2

Outputs:
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref MyCustomVPCName
        Export:
          Name: !Sub ${NewEnvironmentName}-VPCID
    
    VPCPublicRouteTable: 
        Description: Public Routing
        Value: !Ref MyCustomPublicRouteTable
        Export:
          Name: !Sub ${NewEnvironmentName}-PUB-RT

    VPCPrivateRouteTable1: 
        Description: Private routing AZ1
        Value: !Ref PrivateRouteTable1
        Export:
          Name: !Sub ${NewEnvironmentName}-PRI1-RT

    VPCPrivateRouteTable2: 
        Description: Private routing AZ2
        Value: !Ref PrivateRouteTable2
        Export:
          Name: !Sub ${NewEnvironmentName}-PRI2-RT

    MyCustomPublicSubnets:
        Description: A list of the public subnets
        Value: !Join [ ",", [ !Ref MyCustomPublicSubnet1, !Ref MyCustomPublicSubnet2 ]]
        Export:
          Name: !Sub ${NewEnvironmentName}-PUB-NETS

    MyCustomPublicSubnet1:
        Description: The reference to the first public subnet
        Value: !Ref MyCustomPublicSubnet1
        Export:
          Name: !Sub ${NewEnvironmentName}-PUB1-SN

    MyCustomPublicSubnet2:
        Description: The reference to the second public subnet
        Value: !Ref MyCustomPublicSubnet2
        Export:
          Name: !Sub ${NewEnvironmentName}-PUB2-SN
          
    PrivateSubnets:
        Description: A list of the private subnets
        Value: !Join [ ",", [ !Ref MyCustomPrivateSubnet1, !Ref MyCustomPrivateSubnet2 ]]
        Export:
          Name: !Sub ${NewEnvironmentName}-PRIV-NETS
